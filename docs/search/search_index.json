{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"General Information This manual describes how to add the SPECT8 Chat module and the SPECT8 OTT Overlay to your video player. You can jump directly to Chat Web Integration . Note that a one-time Tenant setup is required for any of our customers. Assumptions Integration information given on these pages assumes the following: You have a access to a video stream for your event, which provides a reliable source of time signals that define the current video frame's event time Terminology A broadcast is some video content for any type of event, e.g. a tennis match or a casting show, for which a video stream is available somewhere (most likely some CDN). Every broadcast must have a unique id. The overlay is our OTT overlay solution, which is placed as a layer on top of the video player embedded in your app or web page. The chat module is embedded as iFrame in your app or web page.","title":"General Information"},{"location":"#general-information","text":"This manual describes how to add the SPECT8 Chat module and the SPECT8 OTT Overlay to your video player. You can jump directly to Chat Web Integration . Note that a one-time Tenant setup is required for any of our customers.","title":"General Information"},{"location":"#assumptions","text":"Integration information given on these pages assumes the following: You have a access to a video stream for your event, which provides a reliable source of time signals that define the current video frame's event time","title":"Assumptions"},{"location":"#terminology","text":"A broadcast is some video content for any type of event, e.g. a tennis match or a casting show, for which a video stream is available somewhere (most likely some CDN). Every broadcast must have a unique id. The overlay is our OTT overlay solution, which is placed as a layer on top of the video player embedded in your app or web page. The chat module is embedded as iFrame in your app or web page.","title":"Terminology"},{"location":"chat-web-integration/","text":"Chat Web Integration This guide assumes that there is some kind of HTML page rendered by your infrastructure, for which you want to embed our Chat module. Add iFrame Add the following <iFrame> block to your HTML page: <iframe id=\"spect8Chat\" src=\"https://static.ott.spect8.com/chat/{tenantId}/index.html\" frameborder=\"0\" width=\"100%\" height=\"100%\" ></iframe> Initialize Chat module To initialize the chat module you need to send an init message with the following information: appType: \"WEB\" (required) broadcastId (required), a unique identifier of the video content, to which the chat should belong tenantId (required), a unique identifier of the tenant, which is generated in the tenanat setup Example document.getElementById(\"spect8Chat\").contentWindow.postMessage( JSON.stringify({ type: \"init\", payload: { appType: \"WEB\", broadcastId: \"broadcast-123\", tenantId: \"tenant-123\", }, }), \"https://static.ott.spect8.com\" ); Set User data To \"authenticate\" a logged in (on your HTML page) user you need to send a user message with the following information: userId (required), a unique identifer of your user username (required), a username that is displayed in front of the chat message profileImageSrc (optional), an URL pointing to the users profile image Example document.getElementById(\"spect8Chat\").contentWindow.postMessage( JSON.stringify({ type: \"user\", payload: { userId: \"user-123\", username: \"test user\", }, }), \"https://static.ott.spect8.com\" ); Receive Event data from chat module The chat module sends app and tracking event messages to the parent HTML page via postMessage . Listening to messages from the iFrame in the parent window: window.addEventListener(\"message\", (ev) => { if (ev.origin == \"https://static.ott.spect8.com\") { // var message = JSON.parse(ev.data); } }); Message format: { type: \"appEvent\" | \"trackingEvent\", payload: { category: String, // optional action: String, // optional label: String, // optional value: Number, // optional } } Example Message: Anonymous user tries to send a message { type: \"appEvent\", payload: { category: \"anonymousUser\", action: \"send\", label: \"chat\", } }","title":"Chat Web Integration"},{"location":"chat-web-integration/#chat-web-integration","text":"This guide assumes that there is some kind of HTML page rendered by your infrastructure, for which you want to embed our Chat module.","title":"Chat Web Integration"},{"location":"chat-web-integration/#add-iframe","text":"Add the following <iFrame> block to your HTML page: <iframe id=\"spect8Chat\" src=\"https://static.ott.spect8.com/chat/{tenantId}/index.html\" frameborder=\"0\" width=\"100%\" height=\"100%\" ></iframe>","title":"Add iFrame"},{"location":"chat-web-integration/#initialize-chat-module","text":"To initialize the chat module you need to send an init message with the following information: appType: \"WEB\" (required) broadcastId (required), a unique identifier of the video content, to which the chat should belong tenantId (required), a unique identifier of the tenant, which is generated in the tenanat setup","title":"Initialize Chat module"},{"location":"chat-web-integration/#example","text":"document.getElementById(\"spect8Chat\").contentWindow.postMessage( JSON.stringify({ type: \"init\", payload: { appType: \"WEB\", broadcastId: \"broadcast-123\", tenantId: \"tenant-123\", }, }), \"https://static.ott.spect8.com\" );","title":"Example"},{"location":"chat-web-integration/#set-user-data","text":"To \"authenticate\" a logged in (on your HTML page) user you need to send a user message with the following information: userId (required), a unique identifer of your user username (required), a username that is displayed in front of the chat message profileImageSrc (optional), an URL pointing to the users profile image","title":"Set User data"},{"location":"chat-web-integration/#example_1","text":"document.getElementById(\"spect8Chat\").contentWindow.postMessage( JSON.stringify({ type: \"user\", payload: { userId: \"user-123\", username: \"test user\", }, }), \"https://static.ott.spect8.com\" );","title":"Example"},{"location":"chat-web-integration/#receive-event-data-from-chat-module","text":"The chat module sends app and tracking event messages to the parent HTML page via postMessage . Listening to messages from the iFrame in the parent window: window.addEventListener(\"message\", (ev) => { if (ev.origin == \"https://static.ott.spect8.com\") { // var message = JSON.parse(ev.data); } }); Message format: { type: \"appEvent\" | \"trackingEvent\", payload: { category: String, // optional action: String, // optional label: String, // optional value: Number, // optional } }","title":"Receive Event data from chat module"},{"location":"chat-web-integration/#example-message-anonymous-user-tries-to-send-a-message","text":"{ type: \"appEvent\", payload: { category: \"anonymousUser\", action: \"send\", label: \"chat\", } }","title":"Example Message: Anonymous user tries to send a message"},{"location":"tenant-setup/","text":"Tenant Setup Firebase The chat module and overlay uses Firebase as a data synchronization and authentication hub. We will setup this instance for you or support you setting up this instance. For the chat module and overlay to work we create a configuration file including Firebase access details. This configuration file must be made available to the overlay, which is described in any of the \"Integration\" sections. User Authentication Our backend servers require some means to identify a user-id and tenant-id for incoming web requests. For this we discuss with you which kind of token or session data is available in your existing OTT infrastructure, which can be used to provide user identity. We will implement a resolution mechanism, which validates and/or parses token or session data provided by you to create a Firebase IdToken, which serves as a general authentication token for direct Firebase access or for subsequent calls to our overlay backend.","title":"Tenant Setup"},{"location":"tenant-setup/#tenant-setup","text":"","title":"Tenant Setup"},{"location":"tenant-setup/#firebase","text":"The chat module and overlay uses Firebase as a data synchronization and authentication hub. We will setup this instance for you or support you setting up this instance. For the chat module and overlay to work we create a configuration file including Firebase access details. This configuration file must be made available to the overlay, which is described in any of the \"Integration\" sections.","title":"Firebase"},{"location":"tenant-setup/#user-authentication","text":"Our backend servers require some means to identify a user-id and tenant-id for incoming web requests. For this we discuss with you which kind of token or session data is available in your existing OTT infrastructure, which can be used to provide user identity. We will implement a resolution mechanism, which validates and/or parses token or session data provided by you to create a Firebase IdToken, which serves as a general authentication token for direct Firebase access or for subsequent calls to our overlay backend.","title":"User Authentication"}]}